{"version":3,"sources":["utils/auth.js","utils/helpers.js","utils/actions.js","utils/mutations.js","components/product/index.js","utils/queries.js","components/body/index.js","pages/Home.js","pages/Login.js","utils/refreshTokenSetup.js","pages/Cart.js","components/Nav/index.js","components/header/index.js","utils/reducers.js","redux/store.js","pages/OrderHistory.js","components/Jumbotron/index.js","pages/Success.js","components/Messages/index.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","shortDescription","_string","length","substring","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_BID","gql","ADD_USER","ADD_ORDER","Product","prop","image","title","price","description","cart","bidTimeStamp","bidValue","bidderName","dispatch","useDispatch","useMutation","updateProduct","minBid","pad","num","slice","a","value","document","querySelector","email","firstName","lastName","stamp","moment","format","variables","parseFloat","toString","bidderId","useEffect","setInterval","m","timeLeft","duration","diff","expire","Math","floor","asSeconds","textContent","secs","minutes","hours","hhmmss","Container","styled","div","Img","CardHead","CardBody","Card","H3","h3","H4","h4","BuyBtn","button","props","DelBtn","BidBtn","Input","input","attrs","type","onClick","product","Auth","loggedIn","mutationResponse","alert","id","placeholder","step","min","className","QUERY_CATEGORIES","QUERY_MESSAGES","QUERY_PRODUCTS","QUERY_CHECKOUT","QUERY_USER","Body","state","useSelector","currentCategory","currentSearch","useQuery","loading","data","products","forEach","then","Wrapper","filter","category","name","toLowerCase","includes","filterProducts","map","key","prevUpdate","Home","evtSource","EventSource","addEventListener","evt","JSON","parse","messages","reverse","isSameObject","_data","i","n","Login","addUser","clientId","buttonText","onSuccess","res","id_token","getAuthResponse","profileObj","givenName","familyName","login","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","isSignedIn","theme","icon","getElementById","Cart","stripePromise","loadStripe","useLazyQuery","getCheckout","redirectToCheckout","sessionId","checkout","session","getCart","H5","CheckOutBtn","sum","item","toFixed","calculateTotal","productIds","push","Nav","UL","ul","SPAN","to","href","logout","render","renderProps","disabled","pathname","Header","h1","SearchBtn","Select","select","WrapBar","message_data","user","categories","role","aria-label","onChange","event","mySearch","target","defaultValue","initial","reducer","action","newState","purchaseQuantity","createStore","OrderHistory","orders","order","parseInt","purchaseDate","toLocaleDateString","index","alt","src","Jumbotron","children","style","height","clear","paddingTop","textAlign","Success","addOrder","saveOrder","Messages","Li","li","Message","message","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","error","ReactDOM","StrictMode","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.18947236.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\n\nclass AuthService {\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('lastName');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export function shortDescription(_string) {\n\n   return  _string.length > 300 ?  _string.substring(0, 550) +\"...\" : _string ;\n\n}\n\nexport function idbPromise(storeName, method, object) {\n   return new Promise((resolve, reject) => {\n     // open connection to the database `media-store` with the version of 1\n     const request = window.indexedDB.open('media-store', 1);\n \n     // create variables to hold reference to the database, transaction (tx), and object store\n     let db, tx, store;\n \n     // if version has changed (or if this is the first time using the database), run this method and create the three object stores \n     request.onupgradeneeded = function(e) {\n       const db = request.result;\n       // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n       db.createObjectStore('products', { keyPath: '_id' });\n       db.createObjectStore('categories', { keyPath: '_id' });\n       db.createObjectStore('cart', { keyPath: '_id' });\n     };\n \n     // handle any errors with connecting\n     request.onerror = function(e) {\n       console.log('There was an error');\n     };\n \n     // on database open success\n request.onsuccess = function(e) {\n   // save a reference of the database to the `db` variable\n   db = request.result;\n   // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n   tx = db.transaction(storeName, 'readwrite');\n   // save a reference to that object store\n   store = tx.objectStore(storeName);\n \n   // if there's any errors, let us know\n   db.onerror = function(e) {\n     console.log('error', e);\n   };\n   switch (method) {\n     case 'put':\n       store.put(object);\n       resolve(object);\n       break;\n     case 'get':\n       const all = store.getAll();\n       all.onsuccess = function() {\n         resolve(all.result);\n       };\n       break;\n     case 'delete':\n       store.delete(object._id);\n       break;\n     default:\n       break;\n   }\n   // when the transaction is complete, close the connection\n   tx.oncomplete = function() {\n     db.close();\n   };\n };\n \n   });\n }\n\n \n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const UPDATE_CURRENT_SEARCH = \"UPDATE_CURRENT_SEARCH\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_MESSAGES = 'UPDATE_MESSAGES';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n\n","import gql from 'graphql-tag';\n\n\nexport const UPDATE_BID = gql`\nmutation updateProduct($_id:ID!,$value:Float!,$bidTimeStamp:String!,$bidderName:String!,$bidderId:String!){\n  updateProduct(_id:$_id,value:$value,bidTimeStamp:$bidTimeStamp,bidderName:$bidderName,bidderId:$bidderId){\n  bidValue\n  bidTimeStamp \n  bidderId\n  name\n  _id\n  }\n}`;\n\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email) {\n      user{\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;","import styled, { css } from 'styled-components'\nimport Auth from \"../../utils/auth\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { shortDescription } from '../../utils/helpers'\nimport { ADD_TO_CART,REMOVE_FROM_CART} from '../../utils/actions'\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment'\nimport {UPDATE_BID} from '../../utils/mutations';\nimport React,{ useEffect } from 'react';\n// auction bid \nfunction Product(prop) {\n    const { _id, image, title, price, description, cart, bidTimeStamp, bidValue, bidderName } = prop;\n\n    \n\n    const dispatch = useDispatch();\n    const [updateProduct] = useMutation(UPDATE_BID);\n\n    const minBid = bidValue +1;\n\n    let updateData = null;\n\n    useEffect(()=> {\n\n    const timer = setInterval(updateTimeStamp,1000);\n    let timeLeft = 0;\n\n    \n    function updateTimeStamp(){\n\n       \n\n        if(!bidTimeStamp) return;\n       \n        const m = moment(bidTimeStamp).format();\n       \n      \n        const now = moment();\n        timeLeft = moment.duration(now.diff(m));\n        const expire = Math.floor(120 - timeLeft.asSeconds());\n\n        if(expire <=0)\n        {\n        if(document.querySelector(\"#remainingTime\"+_id)) document.querySelector(\"#remainingTime\"+_id).textContent = \"Sold!\";\n     \n        return;\n        }\n       \n\n       \n        if(document.querySelector(\"#remainingTime\"+_id)) document.querySelector(\"#remainingTime\"+_id).textContent = hhmmss(expire);\n    }\n    },[dispatch])\n\n    function pad(num) {\n        return (\"0\"+num).slice(-2);\n    }\n    function hhmmss(secs) {\n      var minutes = Math.floor(secs / 60);\n      secs = secs%60;\n      var hours = Math.floor(minutes/60)\n      minutes = minutes%60;\n      return `${pad(hours)}:${pad(minutes)}:${pad(secs)}`;\n      // return pad(hours)+\":\"+pad(minutes)+\":\"+pad(secs); for old browsers\n    }\n\n\n    const addToCart = function () {\n        dispatch({\n            type: ADD_TO_CART,\n            product: {\n                _id: _id,\n                image: image,\n                title: title,\n                price: price,\n                description: description\n            }\n        });\n\n    }\n\n    const removeFromCart = function () {\n\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: _id\n        });\n\n\n    }\n\n    const placeBid = function () {\n\n        if(!Auth.loggedIn())\n        {\n            alert(\"you must be logged in to place bids!\")\n            return\n        }\n\n\n          mutationResponse ();\n\n       \n        \n    }\n\n     async function mutationResponse ()\n    {\n\n        let value = document.querySelector(\"#bidInput\"+_id).value;\n        if(!value) value = minBid;\n      \n\n        if(!value || value <= bidValue) return;\n\n        const email = localStorage.getItem('email');\n        const firstName = localStorage.getItem('firstName');\n        const lastName = localStorage.getItem('lastName');\n\n        const stamp = bidTimeStamp ? bidTimeStamp : moment().format();\n\n         const response = await updateProduct({\n            variables: {\n                _id:_id, \n                value:parseFloat(value), \n                bidTimeStamp:stamp.toString(), \n                bidderName:firstName+\" \"+lastName,\n                bidderId:email \n            }\n          });\n\n    }\n\n    const Container = styled.div`\n    width:1000px;\n    height:220px;\n    padding:5px;\n    display:flex;\n    justify-content:space-between;\n    `;\n    const Img = styled.div`\n    height:200px;\n    width:150px;\n    background-image:url('images/${image}');\n    background-repeat: no-repeat;\n    background-size: cover;\n    `;\n    const CardHead = styled.div`\n    display:flex;\n    margin-top:6px;\n    `;\n    const CardBody = styled.div`\n    display:flex;\n    margin-top:20px;\n    `;\n    const Card = styled.div`\n    border-top: 5px solid #FDB515;\n    display:flex;\n    flex-direction: column;\n    margin-left:10px;\n    width:80%;\n    `;\n    const H3 = styled.h3`\n    margin-left:30px;\n    font-size:16px;\n    `;\n\n    const H4 = styled.h4`\n    margin-left:35px;\n    font-size:14px;\n    `;\n\n    const BuyBtn = styled.button`\n    font-size:16px;\n    border-radius: 20px;\n    height: 20px;\n    margin-left:5px;\n    outline:none;\n    cursor:pointer;\n    background-color: ${props => props.delete ? \"tomato\" : \"#FDB515\"};\n    box-shadow: 3px 3px;\n    color:#000;\n    white-space: nowrap;\n    `;\n\n    const DelBtn = BuyBtn;\n\n    const BidBtn = styled.button`\n    font-size:16px;\n    border-radius: 20px;\n    height: 20px;\n \n    margin-left:5px;\n    outline:none;\n    cursor:pointer;\n    background-color: #3B7EA1;\n    box-shadow: 3px 3px;\n    white-space: nowrap;\n    `;\n\n    const ViewBtn = styled.button`\n    font-size:16px;\n    border-radius: 20px;\n    height: 20px;\n    margin-left:35px;\n    outline:none;\n    cursor:pointer;\n    background-color: #00A598;\n    box-shadow: 3px 3px;\n    white-space: nowrap;\n    `;\n\n    const Input = styled.input.attrs({ type: 'number' })`\n    height:20px;\n    width: 55px;\n    border-radius:20px;\n    font-size:14px;\n    margin-left:15px;\n    margin-right:5px;\n    outline:none;\n    text-align:center;\n    `;\n\n    if (cart === \"no\") {\n        return (\n            <Container>\n\n                <Img />\n                <Card>\n                    <CardHead>\n                        <h5><b>{title}</b></h5><H3><b>${price}</b></H3><BuyBtn onClick={addToCart}>Buy Now</BuyBtn>\n                        <BidBtn onClick={placeBid}>Bid</BidBtn><Input id={\"bidInput\"+_id} placeholder={ minBid } step='1' min={minBid}></Input><span id={\"remainingTime\"+_id}></span> <H4 className=\"fa\">&#xf201; {bidderName ? bidderName :\"\"}</H4>\n\n                    </CardHead>\n                    <CardBody>\n                        <p>{shortDescription(description)}</p>\n                    </CardBody>\n                </Card>\n\n            </Container>\n\n        )\n    }\n    if (cart === \"yes\") {\n\n        return (\n            <Container>\n\n                <Img />\n                <Card>\n                    <CardHead>\n                        <h5><b>{title}</b></h5><H3><b>${price}</b></H3><DelBtn delete onClick={removeFromCart}>Remove</DelBtn>\n                    </CardHead>\n                    <CardBody>\n                        <p>{shortDescription(description)}</p>\n                    </CardBody>\n                </Card>\n\n            </Container>\n\n        )\n    }\n}\n\nexport default Product;","import gql from 'graphql-tag';\n\nexport const QUERY_CATEGORIES = gql`\nquery categories {\n  \n    categories{\n        _id\n      name\n    }\n  }`;\n\nexport const QUERY_MESSAGES = gql`\n\nquery user($email:String) {\n\n  user(email:$email) {\n    \n    \n      messages\n      orders {\n        products \n        {\n          \n                _id\n                \n              \n        }\n\n      }\n    \n  }\n}\n\n`;\n\n\nexport const QUERY_PRODUCTS = gql`\nquery products($category: ID, $name: String){\n    products (category:$category,name:$name)\n    {\n      \n            _id\n            name\n            description\n            image\n            price\n            bidderName\n            bidValue\n            bidTimeStamp\n            sold\n            category {\n              _id\n              name\n            }\n        \n    \n    }\n    \n    }\n    \n`;\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;\n\n// export const LOGIN = gql`\n//   mutation login($email: String!, $password: String!) {\n//     login(email: $email, password: $password) {\n//       token\n//       user {\n//         _id\n//       }\n//     }\n//   }\n// `;\n","import styled, { css } from 'styled-components'\nimport Product from '../product'\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\nimport { idbPromise } from \"../../utils/helpers\";\n\n// This files contains content and UI logic for main part of the UI showing the product and the details\n\nfunction Body() {\n\n    const state = useSelector((state) => {\n        return state\n    });\n    const dispatch = useDispatch();\n\n    const { currentCategory,currentSearch } = state;\n\n    const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n    \n    useEffect(() => {\n        if(data) {\n          dispatch({\n            type: UPDATE_PRODUCTS,\n            products: data.products\n          });\n      \n          data.products.forEach((product) => {\n            idbPromise('products', 'put', product);\n          });\n          // add else if to check if `loading` is undefined in `useQuery()` Hook\n        } else if (!loading) {\n          // since we're offline, get all of the data from the `products` store\n          idbPromise('products', 'get').then((products) => {\n            // use retrieved data to set global state for offline browsing\n            dispatch({\n              type: UPDATE_PRODUCTS,\n              products: products\n            });\n          });\n        }\n      }, [data, loading, dispatch]);\n\n\n    function filterProducts() {\n      \n\n        let products = state.products;\n\n\n\n     \n\n        \n\n        if(currentCategory) products = products.filter(product => product.category._id === currentCategory);\n        if(currentSearch) products = products.filter(product => product.name.toLowerCase().includes(currentSearch.toLowerCase()));\n\n        return products\n    }\n\n    const Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content: center;\n    margin-top:50px;\n    `;\n\n    const Wrapper = styled.div`\n    display:flex;\n    justify-content: center;\n    `;\n\n    return (\n\n      <Wrapper>\n\n        <Container>\n            {filterProducts().map(product => (\n                <Product _id={product._id} image={product.image} title={product.name} price={product.price} key={product._id} bidValue={product.bidValue}\n                    description={product.description} bidderName={product.bidderName} bidTimeStamp={product.bidTimeStamp} cart=\"no\"\n                />\n            ))}\n        </Container>\n\n        </Wrapper>\n    )\n}\n\nexport default Body;","import React, { useEffect } from \"react\";\nimport Body from '../components/body';\nimport { useDispatch } from 'react-redux';\nconst clientId = '900972042486-ho4224klutu5ot121jh6nao4d2tnfp8q.apps.googleusercontent.com';\nlet prevUpdate = null;\n\nconst Home = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    const evtSource = new EventSource('http://localhost:3001/events');\n    const evtSource2 = new EventSource('http://localhost:3001/events');\n\n    evtSource2.addEventListener('UPDATE_MESSAGES', function (evt) {\n\n\n      const data = JSON.parse(evt.data);\n      const type = evt.type;\n\n\n      dispatch({\n        type: type,\n        messages: data.messages.reverse()\n      });\n\n    })\n\n    evtSource.addEventListener('UPDATE_PRODUCTS', function (evt) {\n\n      const data = JSON.parse(evt.data);\n      const type = evt.type;\n\n      if (!prevUpdate) {\n        prevUpdate = data;\n      }\n      else if (isSameObject(data)) {\n        return;\n      }\n\n      prevUpdate = data;\n\n      dispatch({\n        type: type,\n        products: data\n      });\n\n    }, false);\n\n  }, [dispatch])\n\n  const isSameObject = function (_data) {\n\n    if (_data.length != prevUpdate.length) return false;\n\n    for (let i = 0; i < _data.length; i++) {\n      for (let n in _data[i]) {\n\n        if (_data[i][n] != prevUpdate[i][n]) return false;\n\n\n      }\n\n    }\n\n    return true;\n\n  }\n\n  return (\n\n\n    <Body />\n\n\n\n    //  </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useMutation} from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../utils/refreshTokenSetup';\nimport { ADD_USER } from \"../utils/mutations\";\n\n\n\nfunction Login(props) {\n\n  const [addUser] = useMutation(ADD_USER);\n  const clientId = '900972042486-ho4224klutu5ot121jh6nao4d2tnfp8q.apps.googleusercontent.com';\n  const onSuccess = res => {\n    var id_token = res.getAuthResponse().id_token;\n    localStorage.setItem('email', res.profileObj.email);\n    localStorage.setItem('firstName', res.profileObj.givenName);\n    localStorage.setItem('lastName', res.profileObj.familyName);\n    localStorage.setItem('id_token',id_token)\n    Auth.login(id_token);\n      const mutationResponse = addUser({\n       variables: {firstName: res.profileObj.givenName, lastName: res.profileObj.familyName,  email: res.profileObj.email}\n    });\n    refreshTokenSetup(res);\n  };\n\n\n  const onFailure = (res) => {\n    console.log('{Login Failes] res:', res)\n\n  };\n\n \n\n\n  return (\n    <div className=\"container signin\">\n      \n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Google Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        isSignedIn={true}\n        theme={'dark'}\n        icon={'true'}\n      />,\n      {document.getElementById('googleButton')}\n     \n    </div>\n  );\n}\n\nexport default Login;\n","import Auth from \"../utils/auth\";\n\nexport const refreshTokenSetup = (res) => {\n    // Timing to renew access token\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n  \n    const refreshToken = async () => {\n      const newAuthRes = await res.reloadAuthResponse();\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\n      //localStorage.setItem('authToken', newAuthRes.id_token);\n      Auth.login(newAuthRes.id_token);\n      // Setup the other timer after the first one\n      setTimeout(refreshToken, refreshTiming);\n    };\n  \n    // Setup first refresh timer\n    setTimeout(refreshToken, refreshTiming);\n  };","import styled, { css } from 'styled-components'\nimport Product from '../components/product'\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { idbPromise } from \"../utils/helpers\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from '../utils/queries';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../utils/actions\";\nimport Auth from \"../utils/auth\";\n\n\nfunction Cart() {\n\n    const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\n    const state = useSelector((state) => {\n        return state\n    });\n    const dispatch = useDispatch();\n    const { cart } = state;\n    cart.forEach(product => {\n        idbPromise('cart', 'put', product);\n    });\n\n    // dispatch using redux\n\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n    useEffect(() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session });\n            });\n        }\n    }, [data]);\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n        };\n        if (!cart.length) {\n            getCart();\n        }\n    }, [cart.length, dispatch]);\n\n    function calculateTotal() {\n        let sum = 0;\n        cart.forEach(item => {\n            sum += item.price;\n        });\n        return sum.toFixed(2);\n    }\n    function submitCheckout() {\n        const productIds = [];\n        cart.forEach((item) => {\n            productIds.push(item._id);\n        });\n        getCheckout({\n            variables: { products: productIds }\n        });\n    }\n\n    const Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content: center;\n    margin-top:50px;\n    `;\n\n    const Wrapper = styled.div`\n    display:flex;\n    justify-content: center;\n    `;\n\n    const H5 = styled.div`\n    margin-bottom:20px;\n    `;\n\n\n    const CheckOutBtn = styled.button`\n    font-size:20px;\n    color:#fff;\n    border-radius: 20px;\n    height: 24px;\n    margin-top:35px;\n    outline:none;\n    cursor:pointer;\n    width:125px;\n    text-align:center;\n    background-color: #333;\n    border: 2px solid #ccc;\n    white-space: nowrap;\n    display:flex;\n    align-items:center;\n    `;\n\n    return (\n        <Wrapper>\n\n            <Container>\n\n                <H5>Your Shopping Cart</H5>\n                {cart.map((product, i) => (\n                    <Product _id={product._id} image={product.image} title={product.name} price={product.price} key={product._id + i}\n                        description={product.description} cart=\"yes\"\n                    />\n                ))}\n\n                <div className=\"flex-row space-between\">\n                    <strong>Total: ${calculateTotal()}</strong>\n                    {\n                        Auth.loggedIn() ?\n                            <CheckOutBtn onClick={submitCheckout}>\n                                Checkout\n                                    </CheckOutBtn>\n                            :\n                            <span>(log in to check out)</span>\n                    }\n                </div>\n            </Container>\n        </Wrapper>\n    )\n}\n\nexport default Cart;","import React,{useEffect} from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link, NavLink, Route} from \"react-router-dom\";\nimport styled, { css } from 'styled-components'\nimport { GoogleLogout } from 'react-google-login';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { UPDATE_MESSAGES } from \"../../utils/actions\";\n\nconst clientId = '900972042486-ho4224klutu5ot121jh6nao4d2tnfp8q.apps.googleusercontent.com';\nconst email = localStorage.getItem('email');\nconst firstName = localStorage.getItem('firstName');\nconst lastName = localStorage.getItem('lastName');\n\n\n\nfunction Nav() {\n\n  const state = useSelector((state) => {\n    return state\n});\n\n  const { cart,messages } = state;\n\n  const UL = styled.ul `\n  list-style-type: none;\n\n  `;\n\n  const SPAN = styled.ul`\n  color:#333;\n  `;\n\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n    \n     \n      return (\n        <UL className=\"flex-row\">\n          <li className=\"mx-1\">\n            <NavLink to=\"/orderHistory\">\n              Orders\n            </NavLink>\n          </li>\n\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n\n\n            <a href=\"/\" onClick={() => {\n\n\n              Auth.logout();\n\n            }}>\n\n              {email &&\n                <GoogleLogout\n                  clientId={clientId}\n                  buttonText=\"Logout\"\n                  render={renderProps => (\n                    <div onClick={renderProps.onClick} disabled={renderProps.disabled}>Logout</div>\n                  )}\n                // onLogoutSuccess={Auth.logout()}\n                theme={'dark'}\n                >\n                </GoogleLogout>\n              }\n            </a>\n          </li>\n          <li>  <NavLink to=\"/cart\"><SPAN className=\"fa\">&#xf291; ({cart.length})</SPAN></NavLink></li>\n          <li><NavLink to=\"/messages\"><SPAN className=\"fa\">&#xf674; ({messages.length})</SPAN></NavLink></li>\n\n        </UL>\n\n\n        \n      );\n    } else {\n      return (\n        <UL className=\"flex-row\">\n          <li className=\"mx-1\">\n          </li>\n          \n         \n          {((window.location.pathname !== \"/login\")) &&\n            <li className=\"mx-1\">\n              <NavLink to=\"/login\">\n                Login\n            </NavLink>\n            </li>\n          \n          }\n        </UL>\n      );\n    }\n  }\n\n  return (\n  \n\n      <nav>\n        {showNavigation()}\n      </nav>\n  \n  );\n}\n\nexport default Nav;\n","import styled, { css } from 'styled-components'\nimport { Link, NavLink, Route} from \"react-router-dom\";\nimport Nav from '../Nav'\nimport { UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY,UPDATE_CURRENT_SEARCH,UPDATE_MESSAGES } from '../../utils/actions';\nimport { QUERY_CATEGORIES,QUERY_MESSAGES } from '../../utils/queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { idbPromise } from \"../../utils/helpers\";\n\n//  search functionality UI including the categories and message UI\n\nfunction Header () {\n\n\n    const email = localStorage.getItem('email');\n\n    const H1 = styled.h1 `\n    margin-left: 30px;\n    `;\n    const Input = styled.input`\n    width: 55%;\n    height: 100%;\n    font-size:18px;\n    border: 0px;\n    border-right:0px; \n    border-left:0px; \n    outline:0px;\n    `;\n    const Container = styled.div`\n    padding: 20px;\n    display:flex;\n    height:30px;\n    width:100%;\n    align-items:center;\n    justify-content:space-between;\n    border-bottom: 1px solid #888;\n    `;\n    const SearchBtn = styled.div`\n    padding-top:3px;\n    font-size:18px;\n    background-color: #FDB515;\n    border-left:0px;\n    width: 50px;\n    border-radius: 0 20px 20px 0;\n    cursor:pointer;\n    text-align: center;\n\n    `;\n    const Select = styled.select`\n    width:80px;\n    height:26px;\n    border:0px;\n    margin-left:20px;\n    padding-left:5px;\n    outline: none;\n    `;\n\n    const WrapBar = styled.div`\n    border:1px solid #000;\n    width: 55%;\n    border-radius: 20px 20px;\n    display:flex;\n    justify-content:space-between;\n    `;\n\n    const state = useSelector((state) => {\n        return state\n    });\n    const dispatch = useDispatch();\n    const { currentCategory,currentSearch } = state;\n    const { loading, data } = useQuery(QUERY_CATEGORIES);\n     const message_data = useQuery(QUERY_MESSAGES,{variables:{email:email}})\n\n  useEffect(() => {\n\n    if(message_data.data && message_data.data.user) {\n      dispatch({\n        type: UPDATE_MESSAGES,\n        messages:  message_data.data.user.messages.reverse()\n    });\n\n    }\n\n  },[message_data.data,dispatch]);\n\n\n    const SelectCategory = function (event) {\n\n        const mySearch = document.querySelector(\"#searchInput\").value;\n        const _id = event.target.value;\n\n        dispatch({\n          type: UPDATE_CURRENT_SEARCH,\n          currentSearch: mySearch\n        });\n\n        dispatch({\n          type: UPDATE_CURRENT_CATEGORY,\n          currentCategory: _id\n        });\n\n    }\n\n    const Search = function (event) {\n\n      const mySearch = document.querySelector(\"#searchInput\").value;\n      dispatch({\n        type: UPDATE_CURRENT_SEARCH,\n        currentSearch: mySearch\n      });\n    }\n\n\n    useEffect(() => {\n        if(data) {\n         \n          dispatch({\n            type: UPDATE_CATEGORIES,\n            categories: data.categories\n          });\n      \n          data.categories.forEach((category) => {\n            idbPromise('categories', 'put', category);\n          });\n          // add else if to check if `loading` is undefined in `useQuery()` Hook\n        } else if (!loading) {\n          // since we're offline, get all of the data from the `products` store\n          idbPromise('categories', 'get').then((categories) => {\n            // use retrieved data to set global state for offline browsing\n            dispatch({\n              type: UPDATE_CATEGORIES,\n              categories: categories\n            });\n          });\n        }\n      }, [data, loading, dispatch]);\n\n    return (\n        <Container>\n        <NavLink to=\"/\">\n        <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n        Media Store\n        </NavLink>\n        <WrapBar>\n        <Select onChange={SelectCategory} value={ currentCategory }>\n        {state.categories.map(category=> ( \n            <option key={category._id} value={category._id}>{category.name}</option>\n\n        ))}\n        <option key=\"all123\" value=\"\">All</option>\n        </Select>\n        <Input id=\"searchInput\" defaultValue={currentSearch}></Input>\n        <SearchBtn onClick={Search} className=\"fa\">&#xf002;</SearchBtn>\n        </WrapBar>\n        <Nav/>\n       \n        </Container> \n\n    );\n\n}\n\nexport default Header;","import { useReducer } from 'react';\n\nimport {\n    UPDATE_PRODUCTS,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY,\n    UPDATE_CURRENT_SEARCH,\n    ADD_TO_CART,\n    ADD_MULTIPLE_TO_CART,\n    REMOVE_FROM_CART,\n    UPDATE_CART_QUANTITY,\n    UPDATE_MESSAGES,\n    CLEAR_CART,\n    \n} from './actions';\n\n\nconst initial = {\n    products: [],\n    cart: [],\n    categories: [],\n    messages: [],\n    currentCategory: '',\n    currentSearch:''\n  };\n\n\nexport const reducer = (state=initial, action) => {\n    switch (action.type) {\n        case UPDATE_MESSAGES:\n            return {\n                ...state,\n                messages:action.messages\n            };\n       \n        case UPDATE_PRODUCTS:\n            return {\n                ...state,\n                products: [...action.products]\n            };\n \n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories]\n            };\n\n        case UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.currentCategory\n            };\n        case UPDATE_CURRENT_SEARCH:\n                return {\n                    ...state,\n                    currentSearch: action.currentSearch\n                };\n        case ADD_TO_CART:\n            return {\n                ...state,\n   \n                cart: [...state.cart, action.product]\n            };\n        case ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, ...action.products],\n            };\n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(product => {\n                return product._id !== action._id;\n            });\n            return {\n                ...state,\n                cart: newState\n            };\n        case UPDATE_CART_QUANTITY:\n            return {\n                ...state,\n           \n                cart: state.cart.map(product => {\n                    if (action._id === product._id) {\n                        product.purchaseQuantity = action.purchaseQuantity;\n                    }\n                    return product;\n                })\n            };\n\n        case CLEAR_CART:\n            return {\n                ...state,\n\n                cart: []\n            };\n\n\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n\n\n\n","import reducer from \"../utils/reducers\";\nimport {createStore} from \"redux\";\n\n\n\n\nconst store = createStore(reducer);\n\nexport default store;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;","import { idbPromise } from \"../utils/helpers\";\nimport React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst Success = () => {\n\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n        async function saveOrder() {\n            const cart = await idbPromise('cart', 'get');\n            const products = cart.map(item => item._id);\n            if (products.length) {\n                const { data } = await addOrder({ variables: { products } });\n                const productData = data.addOrder.products;\n                productData.forEach((item) => {\n                    idbPromise('cart', 'delete', item);\n                });\n            }\n        }\n\n        saveOrder();\n    }, [addOrder]);\n\n    setTimeout(() => {\n        window.location.assign(\"/\");\n    }, 3000);\n\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Success!</h1>\n                <h2>\n                    Thank you for your purchase!\n          </h2>\n                <h2>\n                    You will now be redirected to the homepage\n          </h2>\n            </Jumbotron>\n        </div>\n    );\n};\n\nexport default Success;\n\n\n\n","import React,{useEffect} from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link, NavLink, Route} from \"react-router-dom\";\nimport styled, { css } from 'styled-components'\nimport { useDispatch,useSelector } from 'react-redux';\n\n// Message functionality to communicate an auction win\n\nconst Messages = function()\n{\n\n    const state = useSelector((state) => {\n        return state\n    });\n    \n    const { messages } = state;\n\n    const UL = styled.ul `\n    list-style-type: none;\n\n  `;\n  \n    const Li = styled.li `\n    width:100%;\n    border-bottom:1px solid black;\n    `;\n  \n    const SPAN = styled.ul`\n    color:#333;\n    `;\n  \n    const Message = styled.div`\n    background-color:#fff;\n    position:absolute;\n    width:100%;\n    `;\n  \n\n\n\n\n\n    return (\n\n        <Message><UL>\n        {messages.map((message,index) => (\n            <Li key={\"message\"+index}>{message}</Li>\n\n        ))}\n        </UL></Message>\n\n    )\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { Provider } from 'react-redux'\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Cart from \"./pages/Cart\";\nimport Header from \"./components/header\";\nimport store from \"./redux/store\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport Success from \"./pages/Success\"\nimport Messages from \"./components/Messages\";\n\n\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: 'http://localhost:3001/graphql',\n})\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n           <Provider store={store}> \n            <Header /> \n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n         \n              <Route exact path=\"/cart\" component={Cart} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/success\" component={Success} />\n              {/* <Route component={NoMatch} /> */}\n              <Route exact path=\"/messages\" component={Messages} />\n            </Switch>\n           </Provider> \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\n\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production'  &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}